/**
 * This class is generated by jOOQ
 */
package com.parallax.server.common.cloudsession.db.generated.tables.records;


import com.parallax.server.common.cloudsession.db.generated.tables.Confirmtokens;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ConfirmtokensRecord extends UpdatableRecordImpl<ConfirmtokensRecord> implements Record4<Long, Long, Timestamp, String> {

	private static final long serialVersionUID = 1517716423;

	/**
	 * Setter for <code>cloudsession.confirmtokens.id</code>.
	 */
	public void setId(Long value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>cloudsession.confirmtokens.id</code>.
	 */
	public Long getId() {
		return (Long) getValue(0);
	}

	/**
	 * Setter for <code>cloudsession.confirmtokens.id_user</code>.
	 */
	public void setIdUser(Long value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>cloudsession.confirmtokens.id_user</code>.
	 */
	public Long getIdUser() {
		return (Long) getValue(1);
	}

	/**
	 * Setter for <code>cloudsession.confirmtokens.validity</code>.
	 */
	public void setValidity(Timestamp value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>cloudsession.confirmtokens.validity</code>.
	 */
	public Timestamp getValidity() {
		return (Timestamp) getValue(2);
	}

	/**
	 * Setter for <code>cloudsession.confirmtokens.token</code>.
	 */
	public void setToken(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>cloudsession.confirmtokens.token</code>.
	 */
	public String getToken() {
		return (String) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Long> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Long, Long, Timestamp, String> fieldsRow() {
		return (Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Long, Long, Timestamp, String> valuesRow() {
		return (Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field1() {
		return Confirmtokens.CONFIRMTOKENS.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field2() {
		return Confirmtokens.CONFIRMTOKENS.ID_USER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field3() {
		return Confirmtokens.CONFIRMTOKENS.VALIDITY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return Confirmtokens.CONFIRMTOKENS.TOKEN;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value2() {
		return getIdUser();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value3() {
		return getValidity();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getToken();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ConfirmtokensRecord value1(Long value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ConfirmtokensRecord value2(Long value) {
		setIdUser(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ConfirmtokensRecord value3(Timestamp value) {
		setValidity(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ConfirmtokensRecord value4(String value) {
		setToken(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ConfirmtokensRecord values(Long value1, Long value2, Timestamp value3, String value4) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached ConfirmtokensRecord
	 */
	public ConfirmtokensRecord() {
		super(Confirmtokens.CONFIRMTOKENS);
	}

	/**
	 * Create a detached, initialised ConfirmtokensRecord
	 */
	public ConfirmtokensRecord(Long id, Long idUser, Timestamp validity, String token) {
		super(Confirmtokens.CONFIRMTOKENS);

		setValue(0, id);
		setValue(1, idUser);
		setValue(2, validity);
		setValue(3, token);
	}
}
