/**
 * This class is generated by jOOQ
 */
package com.parallax.server.common.cloudsession.db.generated.tables.records;


import com.parallax.server.common.cloudsession.db.generated.tables.Bucket;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BucketRecord extends UpdatableRecordImpl<BucketRecord> implements Record5<Long, Long, String, Integer, Timestamp> {

	private static final long serialVersionUID = 2140036794;

	/**
	 * Setter for <code>cloudsession.bucket.id</code>.
	 */
	public void setId(Long value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>cloudsession.bucket.id</code>.
	 */
	public Long getId() {
		return (Long) getValue(0);
	}

	/**
	 * Setter for <code>cloudsession.bucket.id_user</code>.
	 */
	public void setIdUser(Long value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>cloudsession.bucket.id_user</code>.
	 */
	public Long getIdUser() {
		return (Long) getValue(1);
	}

	/**
	 * Setter for <code>cloudsession.bucket.type</code>.
	 */
	public void setType(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>cloudsession.bucket.type</code>.
	 */
	public String getType() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>cloudsession.bucket.content</code>.
	 */
	public void setContent(Integer value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>cloudsession.bucket.content</code>.
	 */
	public Integer getContent() {
		return (Integer) getValue(3);
	}

	/**
	 * Setter for <code>cloudsession.bucket.timestamp</code>.
	 */
	public void setTimestamp(Timestamp value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>cloudsession.bucket.timestamp</code>.
	 */
	public Timestamp getTimestamp() {
		return (Timestamp) getValue(4);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Long> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record5 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<Long, Long, String, Integer, Timestamp> fieldsRow() {
		return (Row5) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<Long, Long, String, Integer, Timestamp> valuesRow() {
		return (Row5) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field1() {
		return Bucket.BUCKET.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field2() {
		return Bucket.BUCKET.ID_USER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Bucket.BUCKET.TYPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field4() {
		return Bucket.BUCKET.CONTENT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field5() {
		return Bucket.BUCKET.TIMESTAMP;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value2() {
		return getIdUser();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getType();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value4() {
		return getContent();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value5() {
		return getTimestamp();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BucketRecord value1(Long value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BucketRecord value2(Long value) {
		setIdUser(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BucketRecord value3(String value) {
		setType(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BucketRecord value4(Integer value) {
		setContent(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BucketRecord value5(Timestamp value) {
		setTimestamp(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BucketRecord values(Long value1, Long value2, String value3, Integer value4, Timestamp value5) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached BucketRecord
	 */
	public BucketRecord() {
		super(Bucket.BUCKET);
	}

	/**
	 * Create a detached, initialised BucketRecord
	 */
	public BucketRecord(Long id, Long idUser, String type, Integer content, Timestamp timestamp) {
		super(Bucket.BUCKET);

		setValue(0, id);
		setValue(1, idUser);
		setValue(2, type);
		setValue(3, content);
		setValue(4, timestamp);
	}
}
